---
type: "two-column"
title: "How do they work?"
subtitle: "Standardizing runtime and deployment"
menuTitle: "How - Buildpacks"
buildInColumns: "false"

columnLeftContent: |

  <span class="txt-c">

  *Given*: **An Application**

  *Execute*: A set of **script endpoints** against the app


    <i class="fa fa-tint" style="font-size: 150px; margin-top: 50px;"></i>
  </span>

columnRightContent: |

  * `bin/detect`: Can I handle this? (introspection)
  * `bin/supply`: If yes, provide the dependencies
  * `bin/finalize`: Prepare the app for launch - runs only for the last buildpack
  * `bin/release`: Build the metadata (env variables, start command, etc)

notes: |

  `bin/compile`: is a deprecated alternative to `bin/supply` and `bin/finalize`

  Buildpack execution and app runtime are in containers

  * Uses the host kernel with a rootfs (jeos)
  * Default rootfs is <span style="color: #8FF541;">cflinuxfs2</span> (based on Ubuntu 14.04 Trusty)
  * Moving towards <span style="color: #0008FF;">cflinuxfs3</span> (based on Ubuntu 18.04 Bionic)
  * Cloud Foundry uses [Garden](https://github.com/cloudfoundry-incubator/garden) for containerisation

  Script examples from staticfile buildpack:

  * `detect`: is there a Staticfile?
  * `supply`: install nginx
  * `finalize`: look at provided config, configure nginx, then creates `boot.sh`
  * `release`: creates yaml file:

    ```yaml
    ---
    default_process_types:
    web: \$HOME/boot.sh
    ```

  More info: https://docs.cloudfoundry.org/buildpacks/understand-buildpacks.html
